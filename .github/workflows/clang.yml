name: Clang

on:
  workflow_run:
    workflows: ["Docker"]
    types:
      - completed

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  clang-docker:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [ "5.0", "6.0", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17"]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Check and download container artifact
        if: ${{ github.ref_name != 'main' }}
        id: container-artifact
        uses: croemheld/download-artifact@v4.1.2-allow-not-found
        with:
          name: clang-${{ matrix.version }}
          github-token: ${{ secrets.ARTIFACT_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
          allow-not-found: true
      - name: Load container artifact if available
        if: ${{ steps.container-artifact.outputs.download-path != '' }}
        run: |
          docker load --input clang-${{ matrix.version }}.tar.gz
  clang-format:
    needs: clang-docker
    runs-on: ubuntu-latest
    container: croemheld/icarus-ci:clang-15
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Check code formatting
        run: ./tools/run-clang-format.py -r -e "*/doctest.h" -e "*/json.hpp" -e "*/*build*/*" .
  clang-icarus:
    needs: clang-format
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [ "5.0", "6.0", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17"]
    container: croemheld/icarus-ci:clang-${{ matrix.version }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Set environment variables
        run: echo "CC=clang CXX=clang++" >> "$GITHUB_ENV"
      - name: Run CMake and build ICARUS
        run: |
          mkdir -p build && cd build && cmake .. -GNinja \
          -DCMAKE_BUILD_TYPE=Debug \
          -DCMAKE_C_COMPILER=clang \
          -DCMAKE_CXX_COMPILER=clang++ \
          -DOPTION_BUILD_DOCS=ON \
          -DOPTION_BUILD_LIBS=ON \
          -DOPTION_BUILD_TEST=ON \
          -DOPTION_BUILD_COVERAGE=ON \
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
          && ninja icarus
      - name: Upload ICARUS build artifact
        if: ${{ matrix.version == '15' }}
        uses: actions/upload-artifact@v4.3.1
        with:
          name: build
          path: build
          retention-days: 1
  clang-tidy:
    runs-on: ubuntu-latest
    needs: clang-icarus
    container: croemheld/icarus-ci:clang-15
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Download ICARUS build artifact
        id: build-artifact
        uses: actions/download-artifact@v4.1.2
        with:
          name: build
          path: build
      - name: Run clang-tidy on ICARUS build
        run: |
          ./tools/run-clang-tidy.py -p ${{ format('{0}/build', steps.build-artifact.outputs.download-path) }}
